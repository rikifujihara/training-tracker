// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Add this User model to your existing schema.prisma

model User {
  id        String   @id // This will be the UUID from auth.users.id
  email     String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  displayName String?  @map("display_name")
  avatarUrl   String?  @map("avatar_url")
  role        UserRole @default(TRAINER)
  isActive    Boolean  @default(true) @map("is_active")

  // Optional: Additional profile fields
  firstName String? @map("first_name")
  lastName  String? @map("last_name")

  // Relationships
  leads Lead[]

  // Future relationships (will uncomment later)
  // workouts     Workout[]
  // programs     Program[]
  // clientBookings Booking[] @relation("ClientBookings")
  // trainerBookings Booking[] @relation("TrainerBookings") 

  @@map("users")
}

model Lead {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Lead fields
  firstName   String?  @map("first_name")
  lastName    String?  @map("last_name")
  age         String?
  birthday    String?
  gender      String?
  phoneNumber String?  @map("phone_number")
  email       String?
  goals       String?

  // Import metadata
  importedAt DateTime @default(now()) @map("imported_at")
  source     String   @default("email_upload") // Track where lead came from

  // Relationships
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([userId])
  @@index([email])
  @@map("leads")
}

enum UserRole {
  TRAINER
  CLIENT

  @@map("user_role")
}
